# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        #ref: main

    ## gradle caching
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
        
    ## make application-dev.properties
#    - uses: actions/checkout@v3
#      with:
#        ref: main
    - name: make application-dev.properties
      run: |
        echo "ls -a . & pwd"
        ls -a .
        pwd

        echo "---------------------------------------"
        cd src
        ls -a .

        echo "---------------------------------------"
        cd main
        ls -a .

        echo "---------------------------------------"
        cd resources
        ls -a .

        echo "touch & copy"
        touch ./application-dev.properties
        echo "test" >> ./application-dev.properties
        pwd

        echo "ls -a . & cat"
        ls -a .
        pwd
        echo ./application-dev.properties
        cat ./application-dev.properties
      shell: bash
      env:
        TEST: ${{ secrets.TEST }}

    ## gradle build
    - name: Build with Gradle
      run: ./gradlew bootJar -x test

#    - name: Build with Gradle
#      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
#      with:
#        arguments: build

    - name: check jar file
      run: |
        pwd
        ls -a .
        cd ./build/libs
        ls -a .
        jar xf spring-github-actions-0.0.1-SNAPSHOT.jar
        ls -a .
        cd ./BOOT-INF/classes
        pwd
        ls -a .
      shell: bash
